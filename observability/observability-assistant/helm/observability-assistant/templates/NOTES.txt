1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.observabilityAssistant.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "observability-assistant.fullname" . }}-observability-assistant)
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.observabilityAssistant.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "observability-assistant.fullname" . }}-observability-assistant'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "observability-assistant.fullname" . }}-observability-assistant --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.observabilityAssistant.service.port }}
{{- else if contains "ClusterIP" .Values.observabilityAssistant.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "observability-assistant.name" . }},app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/component=observability-assistant" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Internal service endpoints:
   - Grafana MCP Server: {{ include "observability-assistant.fullname" . }}-grafana-mcp-server:{{ .Values.grafanaMcpServer.service.port }}
   - Tempo MCP Server: {{ include "observability-assistant.fullname" . }}-tempo-mcp-server:{{ .Values.tempoMcpServer.service.port }}

3. Environment Variables:
   Make sure to set the following environment variables in your values.yaml:
   - grafanaMcpServer.env.grafanaUrll: Your Grafana instance URL
   - grafanaMcpServer.env.grafanaApiKey: Your Grafana API key
   - tempoMcpServer.env.tempoUrl: Your Tempo instance URL

   The observability-assistant automatically gets:
   - GRAFANA_MCP_URL: {{ include "observability-assistant.fullname" . }}-grafana-mcp-server:{{ .Values.grafanaMcpServer.service.port }}
   - TEMPO_MCP_URL: {{ include "observability-assistant.fullname" . }}-tempo-mcp-server:{{ .Values.tempoMcpServer.service.port }} 